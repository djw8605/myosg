<style>
.well {
margin: 5px 5px 5px 0;
padding-top: 10px;
}
</style>
<div class="history_detail_content">
<?

if(isset($this->downtime)) {
    //this is in downtime..
    echo "<div class=\"status_DOWNTIME well\">";
    echo "This resource is currently under maintenance.<br/>";
    echo "<div class=\"well downtime\">";
    echo "<b>Maintenance Summary:</b><div>".$this->downtime->downtime_summary."</div>";
    echo "<table width=\"100%\"><tr>";
    $start = date(DATE_W3C, $this->downtime->unix_start_time);
    $end = date(DATE_W3C, $this->downtime->unix_end_time);

    echo "<td><b>From:</b><br><time datetime=\"$start\"/></td>";
    echo "<td><b>To:</b><br><time datetime=\"$end\"/></td>";
    echo "</tr></table>";
    if($this->detail_service_status !== null) {
        $status = Status::getStatus($this->detail_service_status->status_id);
        echo "<b>RSV Status:</b><div class=\"status_$status\">";
        echo $this->detail_service_status->detail."</div>";
    }
    echo "</div>";//well downtime
    echo "</div>";//status_DOWNTIME
} else {
    //process normal status
    if($this->detail_service_status !== null) {
        $status = Status::getStatus($this->detail_service_status->status_id);
        echo "<div class=\"well status_".$status."\">";
        $status_time = $this->detail_service_status->timestamp;
        $iso = date(DATE_W3C, $status_time);
        //$timestr = date(config()->date_format_full, $time);
        echo "<p>Status changed to $status at <time datetime=\"$iso\"/><br/>";
        echo $this->detail_service_status->detail."</p>";
        echo "</div>";

        if($this->detail_time != $status_time) {
            //echo "<p class=\"muted\">Above status is applicable at the time when this status change occured.</p>";
        }
    } else {
        echo "<div class=\"well status_UNKNOWN\">";
        echo "<p>No status change has ever occured for this service.</p>";
        echo "</div>";
    }
}

$content = showmetrics($this->detail_critical_metrics, $this->metric_details, $this->detail_time);
if($content != "") {
    echo "<span class=\"h3\">Critical Metrics</span>";
    echo $content;
}

$content = showmetrics($this->detail_noncritical_metrics, $this->metric_details, $this->detail_time, true);
if($content != "") {
    $title = "<span class=\"h3\">Non-Critical Metrics</span>";
    echo outputToggle($title, $title, $content);
}

echo "</div>";//history_detail_content

function showmetrics($metrics, $metric_details, $timestamp, $hide_empty = false) 
{
    $outs = array();
    foreach($metrics as $metric) {
        $metric_id = (int)$metric["metric_id"];
        $metric_detail = $metric_details[$metric_id][0];
        $metric_name = $metric_detail->common_name;
        $outs[$metric_name] = showmetric($metric, $metric_details, $timestamp, $hide_empty);
    }
    ksort($outs);
    $out = "";
    foreach($outs as $o) {
        $out .= $o;
    } 
    return $out;
}

function showmetric($metric, $metric_details, $timestamp, $hide_empty)
{
    $out = "";

    $metric_id = (int)$metric["metric_id"];
    $metric_detail = $metric_details[$metric_id][0];

    $freshfor = $metric_detail->fresh_for;
    $reported = isset($metric["detail_id"]);
    if(isset($metric["timestamp"])) {
        $expired = !MetricData::isFresh((int)$metric["timestamp"], (int)$freshfor, $timestamp);
        if(isset($metric["detail"])) {
            $detail = $metric["detail"]->detail;
            $gathered_at = $metric["detail"]->gathered_at;
            $service_uri = $metric["detail"]->service_uri;
        } else {
            $detail = $gathered_at = $service_uri = null;
        }
    } else {
        //detail not available..
        $expired = null;
        $detail = "";
        $gathered_at = "N/A";
        $service_uri = "N/A";
    }

    $name = $metric_detail->common_name;
    $desc = $metric_detail->description;
    $help_url = config()->default_rsvforum;
    if(isset(config()->rsvforum[$metric_id])) {
        $help_url = config()->rsvforum[$metric_id];
    }

    if($reported) {
        $css = "";
        if($expired) $css = "expired";
        $out .= "<div class=\"status_".$metric["status"]." $css\">";
        $time = date(DATE_W3C, (int)$metric["timestamp"]);
        $out .= "<div class=\"sidenote\">At <time datetime=\"$time\"/></div>";
        if($expired) $name .= " (Expired)";
    } else {
        return "";
    }

    $out .= "<span class=\"h4\" rel=\"tooltip\" title=\"$desc\">$name</span>";
    if(!uwa()) {
        //$out .= " <a target=\"_help\" href=\"$help_url\"><img src=\"".fullbase()."/images/help.png\" style='align: bottom;'/></a>";
        $detail = trim($detail);
        if($detail != "") {
            $detail = "<pre class='status_detail'>$detail</pre>";
            $detail .= "Fresh for: ".humanDuration($freshfor);
            $detail .= "&nbsp;&nbsp;&nbsp;Service URI: ".$service_uri;

            $detail .= "&nbsp;&nbsp;&nbsp;Gathered At: $gathered_at";
            //check if service_uri and gathered_at are on the same domain
            preg_match("/[^\.\/]+\.[^\.\/]+$/", $service_uri, $matches);
            $service_uri_domain = $matches[0];
            preg_match("/[^\.\/]+\.[^\.\/]+$/", $gathered_at, $matches);
            $gathered_at_domain = $matches[0];
            if($service_uri_domain != $gathered_at_domain) {
                $detail .= " <span class=\"label label-warning\">Not on the same domain</span>";
            }

            $detail .= "<br/>";
            $show = true;
            if($metric["status"] == "OK") $show = false;
            $out .= outputToggle("Show Detail", null, $detail, $show);
        }
    }
    $out .= "</div>";
    return $out;
} 


