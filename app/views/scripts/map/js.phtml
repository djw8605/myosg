
function init_icon(type, img)
{
    var icon = new GIcon();
    icon.image = "<?=fullbase();?>/images/" + img;
    icon.iconAnchor = new GPoint(10, 10);
    icon.infoWindowAnchor = new GPoint(10, 10);
    icon.iconSize = new GSize(20, 20);
    icon.shadow = "<?=fullbase();?>/images/shadow.png";
    icon.shadowSize = new GSize(25, 25);

    return icon;
}

var marker_id = {}
var map = null;

function update_anchor() {
    var pos = map.getCenter();
    document.location="#"+pos.toUrlValue()+"|"+map.getZoom()+"|"+map.getCurrentMapType().getName();
}

//http://code.google.com/apis/maps/documentation/reference.html#GMapTypeOptions
function init() {
  if (GBrowserIsCompatible()) {
    map = new GMap2(document.getElementById("map_canvas"), {mapTypes:[G_PHYSICAL_MAP, G_HYBRID_MAP, G_NORMAL_MAP]});
    map.setMapType(G_PHYSICAL_MAP); 
<?if(uwa()) {?>
    map.addControl(new GSmallMapControl());
<?} else { ?>
    map.addControl(new GLargeMapControl3D());
<?}?>
    map.addControl(new GMapTypeControl());
    map.enableScrollWheelZoom();

    //process anchor (if any)
    var anchor = document.location.hash.split("#")[1];
    if(anchor) {
        var params = anchor.split("|");
        var pos = GLatLng.fromUrlValue(params[0]);
        var zoom = params[1];
        map.setCenter(pos, parseInt(zoom));
        if(params.length > 2) {
            switch(params[2]) {
            case "Terrain":
                map.setMapType(G_PHYSICAL_MAP);
                break;
            case "Hybrid":
                map.setMapType(G_HYBRID_MAP);
                break;
            case "Map":
                map.setMapType(G_NORMAL_MAP);
                break;
            }
        }
    } else {
        //set it to default location
        map.setCenter(new GLatLng(38.61687,-96.767578), 4);
    }

    GEvent.addListener(map, "infowindowclose", function() {
        $("#site option[value=]").attr("selected", "selected");
    });
    GEvent.addListener(map, "moveend",  update_anchor);
    GEvent.addListener(map, "zoomend",  update_anchor);
    GEvent.addListener(map, "maptypechanged",  update_anchor);

    //generate icons
    var icon = {};
    var type = "ok";
    icon[type] = init_icon(type, "status_ok_map.png");
    type = "warning";
    icon[type] = init_icon(type, "status_warning_map.png");
    type = "unknown";
    icon[type] = init_icon(type, "status_unknown_map.png");
    type = "critical";
    icon[type] = init_icon(type, "status_critical_map.png");
    type = "downtime";
    icon[type] = init_icon(type, "status_downtime_map.png");

    function createMarker(id, point, markerOptions, html) {
      var marker = new GMarker(point, markerOptions);
      marker_id[id] = marker;
      GEvent.addDomListener(marker, "click", function() {
        marker.openInfoWindowHtml(html);
        var latlng = marker.getLatLng();
        map.panTo(latlng);
        $("#site option[value="+id+"]").attr("selected", "selected");
      });
      return marker;
    }
    //this function determine what status is shown above what other status
    function zfunction(marker, something) {
        var title = marker.getTitle();
        if(title == "unknown") { 
            return 0; 
        } else if(title == "ok") {
            return 1;
        }
        return 2;
    }
<?
foreach($this->sites as $site) {

    //status counter    
    $status_ok = 0;
    $status_warning = 0;
    $status_critical = 0;
    $status_unknown = 0;
    $status_downtime = 0;

    $site_id = $site->id;

    if(!isset($this->rgs[$site_id])) continue;
    $rgs = $this->rgs[$site_id];
    if(count($rgs) == 0) continue; //don't show site with no resource group
    if($site->active == 0 || $site->disable == 1) continue; //don't show sites that are not active

    $html = "";
    foreach($rgs as $rg) {
        $rgname = $rg->name;

        //this is now done by the controller
        //if($rg->active == 0 || $rg->disable == 1) continue;

        if(uwa()) {
            $target = "target=\"_blank\"";
        } else {
            $target = "";
        }
        $gid = $rg->id;
        $html .= "<h3>Resource Group: <a $target href=\"".fullbase()."/rgsummary?datasource=summary&rg=on&rg_$gid&summary_attrs_showdesc=on&summary_attrs_showservice=on&summary_attrs_showrsvstatus=on\">$rgname</a></h3>";
        $resource_count = 0;
        if(isset($this->resources_bygid[$rg->id])) {
            $rs = $this->resources_bygid[$rg->id];
            foreach($rs as $r) {
                if($r->active == 0 || $r->disable == 1) continue;
                $name = $r->name;
                if(isset($this->downtime[$r->id])) {
                    $status = "DOWNTIME";
                    $note = "This resource is currently under maintenance.";
                } else if(isset($this->resource_status[$r->id][0])) {
                    $rstatus = $this->resource_status[$r->id][0];
                    $status = Status::getStatus($rstatus->status_id);
                    $note = $rstatus->detail;
                } else {
                    $status = "UNKNOWN";
                    $note = "Resource status is not calculated for this resource.";
                }
                $html .= "<div class=\"status_$status\"><h4>$name</h4>$note</div>";

                //determine site status
                if($status == "OK") $status_ok++;
                if($status == "WARNING") $status_warning++;
                if($status == "CRITICAL") $status_critical++;
                if($status == "UNKNOWN") $status_unknown++;
                if($status == "DOWNTIME") $status_downtime++;
                
                $resource_count++;
            }
        }
        if($resource_count == 0) {
            $html .= "No active resource exists under this resource group.";
        }
    }

    //decide site status
    if($status_critical > 0) $status = "critical";
    else if($status_downtime > 0) $status = "downtime";
    else if($status_warning > 0) $status = "warning";
    else if($status_unknown > 0) $status = "unknown";
    else if($status_ok > 0) $status = "ok";
    else $status = "unknown"; //no info!?

    $wrap_html = "<h2>$site->name</h2><div style=\"overflow: auto; max-height: 300px;\">".addslashes($html)."</div>";

    if($site->latitude == null) $site->latitude = 0;
    if($site->longitude == null) $site->longitude = 0;
    echo "map.addOverlay(createMarker($site_id, new GLatLng(".$site->latitude.", ".$site->longitude."), {title:\"$status\", icon:icon[\"$status\"],zIndexProcess:zfunction}, '$wrap_html'));\n";
    echo "$(\"#site\").append(\"<option value='$site_id'>$site->name</option>\");\n";
}
?>
  }
    $("#site").change(function() {
        var id = $(this).val();
        var marker = marker_id[id];
        if(marker) {
            $(marker).trigger('click');
        } else {
            map.closeInfoWindow();
        }
    });
}
